trigger:
- dev

pool:
  vmImage: 'ubuntu-20.04'

variables:
  location: 'West Europe'

stages:
  - stage: Build
    displayName: 'Build Application'
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'package'

          - task: CopyFiles@2
            displayName: 'Copy War'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: |
                **/*.war
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()

          - task: CopyFiles@2
            displayName: 'Copy Ansible file'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: |
                **/main.yml
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deployment
    displayName: 'Deployment'
    condition: succeeded()
    dependsOn: Build
    jobs:
    - deployment: Deployment
      pool:
        vmImage: 'ubuntu-20.04'
      environment: Dev
      strategy:
        runOnce:
          deploy:
            steps:
            - task: replacetokens@3
              displayName: 'Replace Tokens'
              inputs:
                targetFiles: '$(Pipeline.Workspace)/drop/ansible/main.yml'
                encoding: 'auto'
                writeBOM: true
                escapeType: 'none'
                actionOnMissing: 'warn'
                keepToken: false
                tokenPrefix: '__'
                tokenSuffix: '__'
                useLegacyPattern: false
                enableTelemetry: true
            - task: Ansible@0
              inputs:
                ansibleInterface: 'remoteMachine'
                connectionOverSsh: 'VmConnexionAnsible'
                playbookSourceRemoteMachine: 'agentMachine'
                playbookRootRemoteMachine: '$(Pipeline.Workspace)/drop/ansible'
                playbookPathLinkedArtifactOnRemoteMachine: 'main.yml'
                inventoriesRemoteMachine: 'hostList'
                inventoryHostListRemoteMachine: '137.116.94.5'
                failOnStdErr: false
            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy website'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'AzureConnexion'
                appType: 'webApp'
                WebAppName: '$(webappName)'
                packageForLinux: '$(Pipeline.Workspace)/drop/target/ROOT.war'
                AppSettings: '-SPRING_DATASOURCE_USERNAME $(mysqlAdmin)@$(mysqlServerName) -SPRING_DATASOURCE_PASSWORD $(mysqlAdminSecret) -SPRING_DATASOURCE_URL jdbc:mysql://$(mysqlServerName).mysql.database.azure.com:3306/hotel_coupon?useSSL=true&requireSSL=false'
                TakeAppOfflineFlag: true
                RemoveAdditionalFilesFlag: true              